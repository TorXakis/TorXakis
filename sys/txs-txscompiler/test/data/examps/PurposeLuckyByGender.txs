{-
TorXakis - Model Based Testing
Copyright (c) 2015-2017 TNO and Radboud University
See LICENSE at root directory of this repository.
-}

TYPEDEF Sex ::= Male | Female ENDDEF

TYPEDEF Person ::=
    Person { sex :: Sex 
           ; firstName, lastName :: String
           ; dayOfBirth, monthOfBirth :: Int
           }
ENDDEF

CHANDEF Channels ::=  In   :: Person
                    ; Out  :: Bool
ENDDEF

FUNCDEF isLuckyByName (p :: Person) :: Bool ::=
    at(firstName(p), 0 ) == at(lastName(p), 0 )
ENDDEF

FUNCDEF isLuckyByBirthday (p :: Person) :: Bool ::=
    dayOfBirth(p) == monthOfBirth(p)
ENDDEF

PROCDEF repeatAndSwitchGender [ In :: Person ; Out :: Bool ] ( pos, length :: Int; s :: Sex) HIT ::=
        (
            [[ pos > 1 ]] =>> In ? p [[ sex(p) == s ]] >-> EXIT
            ##
            [[ pos == 1 ]] =>> In ? p [[ (sex(p) == s)
                                        /\ ( not (isLuckyByName(p)))
                                        /\ ( not (isLuckyByBirthday(p)))
                                      ]] >-> EXIT
        )
        >>> Out ? b
        >-> (
                [[pos == length ]] =>> (
                                         [[ isMale(s) ]] =>> repeatAndSwitchGender [In,Out] (1, length, Female)
                                       ##
                                         [[ isFemale(s) ]] =>> repeatAndSwitchGender [In,Out] (1, length+1, Male)
                                       )
                ##
                [[pos < length ]] =>> repeatAndSwitchGender [In, Out] (pos+1,length, s)
            )
ENDDEF

PURPDEF PurposeLuckyByGender ::=
    CHAN IN    In 
    CHAN OUT   Out

    GOAL luckyByGender ::= repeatAndSwitchGender [In,Out] (1,1,Male)
ENDDEF
