FUNCDEF const(x, y :: Int) :: Int ::=   
    x
ENDDEF

FUNCDEF twenty(x :: Int) :: Int ::=
    -- LET z = 10; b = True IN x NI
    20
ENDDEF

FUNCDEF let(x :: Int) :: Int ::=
    LET x = 10; y :: Bool = True IN x NI
ENDDEF

FUNCDEF let2(x :: Int; z :: Bool) :: Int ::=
    LET x = 10; y :: Bool = True; z = 9 IN z NI
ENDDEF

FUNCDEF let3(x :: Int; z :: Int) :: Int ::=
    LET x = 10; y :: Bool = True; z = 9 IN z NI
ENDDEF

FUNCDEF h() :: String ::=
    g
ENDDEF

FUNCDEF g() :: String ::=
    "Hello"
ENDDEF

-- TODO: it seems TorXakis cannot handle this. Could the new compiler?
-- FUNCDEF j(g :: String) :: String ::=
--     g
-- ENDDEF



