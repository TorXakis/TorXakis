{-
TorXakis - Model Based Testing
Copyright (c) 2015-2017 TNO and Radboud University
See LICENSE at root directory of this repository.
-}


-- ----------------------------------------------------------------------------------------- --
-- Dispatch Process
-- ----------------------------------------------------------------------------------------- --
-- greatest common diviser
-- https://en.wikipedia.org/wiki/Euclidean_algorithm
FUNCDEF  gcd ( a, b :: Int ) :: Int ::=
    IF b == 0 THEN  a
              ELSE  gcd (b, a % b)
    FI
ENDDEF

-- ----------------------------------------------------------------------------------------- --
-- processor

PROCDEF  processor [ Start :: Int # Int; Finish :: Int ] ( )
 ::=
             Start ?x ?y  [[ ( x > 0 ) /\ ( y > 0 ) ]]
        >->  Finish ! gcd ( x, y )
        >->  processor [ Start, Finish ] ( )
ENDDEF


-- ----------------------------------------------------------------------------------------- --


PROCDEF  processors [ Start :: Int # Int; Finish :: Int ] ( )
 ::=
             processor [ Start, Finish ] ( )
        |||
             processor [ Start, Finish ] ( )
        |||
             processor [ Start, Finish ] ( )
ENDDEF


-- ----------------------------------------------------------------------------------------- --


PROCDEF  dispatcher [ Job, Dispatch :: Int # Int ] ( )
 ::=
             Job ?x ?y  [[ ( x > 0 ) /\ ( y > 0 ) ]]
        >->  Dispatch !x !y
        >->  dispatcher [ Job, Dispatch ]  ( )
ENDDEF


-- ----------------------------------------------------------------------------------------- --


MODELDEF Model ::=
    CHAN IN    Job   
    CHAN OUT   Finish

    BEHAVIOUR
        HIDE  [ Job2Proc :: Int # Int ]
        IN
                dispatcher [ Job, Job2Proc ]  ( )
            |[ Job2Proc ]|
                processors [ Job2Proc, Finish ] ( )
        NI
ENDDEF

-- ----------------------------------------------------------------------------------------- --

CHANDEF Channels ::=
    Job      :: Int # Int;
    Finish   :: Int
ENDDEF

-- ----------------------------------------------------------------------------------------- --
--                                                                                           --
-- ----------------------------------------------------------------------------------------- --
